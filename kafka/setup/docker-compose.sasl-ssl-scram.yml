---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_jaas.conf
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./sasl-ssl-scram/secrets/zookeeper_jaas.conf:/etc/kafka/secrets/zookeeper_jaas.conf:ro

  config-scram:
    image: confluentinc/cp-kafka:7.5.3
    container_name: "config-scram"
    depends_on:
      zookeeper:
        condition: service_healthy
    command: "bash -c 'echo Waiting for Zookeeper to be ready... && \
                          cub zk-ready zookeeper:2181 120 && \
                          kafka-configs --zookeeper zookeeper:2181 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=Ohmidas@123]' --entity-type users --entity-name admin && \
                          kafka-configs --zookeeper zookeeper:2181 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=Ohmidas@123]' --entity-type users --entity-name kafkaui '"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_jaas_client.conf
    volumes:
      - ./sasl-ssl-scram/secrets/zookeeper_jaas_client.conf:/etc/kafka/secrets/zookeeper_jaas_client.conf:ro

  broker1:
    image: confluentinc/cp-kafka:7.5.3
    hostname: broker1
    container_name: broker1
    depends_on:
      - config-scram
    expose:
      - 9101
      - 9092
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_SSL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_SSL:SASL_SSL,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://broker1:29092,PLAINTEXT_HOST://broker1:9092
      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SCRAM-SHA-256
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: credentials
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: credentials
      KAFKA_SSL_KEY_CREDENTIALS: credentials
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_jaas.conf
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SUPER_USERS: 'User:admin;User:kafkaui'
      # enables 2-way authentication
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=broker1 -Dcom.sun.management.jmxremote.rmi.port=9101
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
    healthcheck:
      test: [ "CMD", "bash", "-c", 'nc -z broker1 9092' ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./sasl-ssl-scram/secrets/kafka_jaas.conf:/etc/kafka/secrets/kafka_jaas.conf:ro
      - ./sasl-ssl-scram/secrets/credentials:/etc/kafka/secrets/credentials:ro
      - ./sasl-ssl-scram/secrets/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro
      - ./sasl-ssl-scram/secrets/broker1.server.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro
      - ./sasl-ssl-scram/secrets/supper-admin.properties:/home/appuser/supper-admin.properties:ro
      - ./sasl-ssl-scram/secrets/client.properties:/home/appuser/client.properties:ro

  kafka-create-topics:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      broker1:
        condition: service_healthy
    hostname: kafka-create-topics
    command: ["bash", "./init.sh"]
    working_dir: /scripts
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    volumes:
    - ./scripts:/scripts
    - ./sasl-ssl-scram/secrets/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro
    - ./sasl-ssl-scram/secrets/supper-admin.properties:/home/appuser/supper-admin.properties:ro
    - ./sasl-ssl-scram/secrets/client.properties:/home/appuser/client.properties:ro

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.5.3
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      broker1:
        condition: service_healthy
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker1:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
      KSQL_SSL_TRUSTSTORE_LOCATION: /etc/kafka-ksqldb/secrets/kafka.truststore.jks
      KSQL_SSL_TRUSTSTORE_PASSWORD: Ohmidas@123
      KSQL_SECURITY_PROTOCOL: SASL_SSL
      KSQL_SASL_MECHANISM: SCRAM-SHA-256
      KSQL_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="Ohmidas@123";'
    healthcheck:
      test: [ "CMD", "bash", "-c", 'nc -z ksqldb-server 8088' ]
      interval: 10s
      timeout: 5s
      retries: 5  
    volumes:
      - ./sasl-ssl-scram/secrets/kafka.truststore.jks:/etc/kafka-ksqldb/secrets/kafka.truststore.jks:ro
      - ./sasl-ssl-scram/secrets/broker1.server.keystore.jks:/etc/kafka-ksqldb/secrets/kafka.keystore.jks:ro
  
  # docker compose -f docker-compose.sasl-ssl-scram.yml exec ksqldb-cli ksql http://ksqldb-server:8088
  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:7.5.3
    container_name: ksqldb-cli
    depends_on:
      broker1:
        condition: service_healthy
      ksqldb-server:
        condition: service_healthy
    entrypoint: /bin/sh
    tty: true

  kafka-ui:
    image: provectuslabs/kafka-ui:master
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      broker1:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker1:29092
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: SCRAM-SHA-256
      KAFKA_CLUSTERS_0_PROPERTIES_PROTOCOL: SASL
      KAFKA_CLUSTERS_0_SSL_TRUSTSTORELOCATION: /kafka.truststore.jks
      KAFKA_CLUSTERS_0_SSL_TRUSTSTOREPASSWORD: Ohmidas@123
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="kafkaui" password="Ohmidas@123";'
    volumes:
      - ./sasl-ssl-scram/secrets/kafka.truststore.jks:/kafka.truststore.jks:ro
